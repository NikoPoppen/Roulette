24.02.2017

Start: 16:00Uhr	Ende:18:30
-Entwicklung des Menus
-Entwicklung des Spielfelds (grafisch)

Start: 18:30Uhr	Ende:19:15Uhr
-Spielfeld GUI angepasst
-Speilfeld GUI in Java eingebunden
-Menu GUI und Spielfeld GUI miteinadner verbunden
-Gui für den Wetteinsatz erstellt
-Bug fix (öffnen des einsatz fensters)
-Wetteinsatzfenster mit dem Spielfeld verbuden

---

03.03.2017

Zeit: 90min
-GUI Verbesserungsvorschläge gesammelt
-mit Niko Poppen unterhalten, wie wir beim Programmieren des Algorithmus vorgehen wollen 

---

08.03.2017

Zeit: 1h
-Erstellung des Registrierungsfensters
-in Java eingebunden

---

09.03.2017

Zeit: 1,5h
-PowerPoint zu unserem Projektthema ersttelt (Niko Poppen hat dabei geholfen)
-Informationen für die PowerPoint wurde aus dem Lastenheft entnommen, dass Sebastion Koch erstellt hat

---

10.03.2017

Start: 11:20Uhr	Ende:12:50Uhr
-Erstlleung eines Klassendiagramms mit StarUML

---

13.03.2017

Start: 21:30Uhr	Ende: 21:50Uhr
-bug fix package
-Klassendiargamm überarbeitet

---

14.03.2017

Zeit:90min
-Funktionen Klassenübergreifend aufrufen
-Einsatz einen Rückgabewert gegeben

---

17.03.2017

Zeit:60min
-Klassen- und Packageübergreifend funktion aufrufen

Zeit: 90min
-model view controller
-der eingegebene einsatzwert in den algorithmus übergeben & aufrufen

---

21.03.2017

Zeit:90min
-zähler variabel erstellt für array
  -die zähler variabel gibt die größe des arrays an
-button wert zugewiesen
-Math.random

---

24.03.2017

Zeit:170min
-allen buttons in der game.fxml/GameController die zähler variabel hinzugefügt
-allen buttons in der game.fxml/GameController einen wert gegeben
-array erstellt in dem alle gesetzen werte abgespeichert werden -> als eigene Funtion
-arrayausgabe zur überprüfung
-im menü "start" button zu "Simulator" umbenannt
-spielfeld buttons mit einem weißen rahmen versehen

Zeit: 60min
- fenstergrößen bug behoben (bei allen Fenstern)
- versucht github einzurichten -> push und fetch funktioniert immernoch nicht

---

27.03.2017

Start: 20:00Uhr End: 21:10Uhr
-game.fxml -> start button der den Algorithmus startet von der Größe angepasst
-variabel "usernameVar" als public static gesetzt, damit der eingegebener Benutzername immer und überall ausgegeben werden kann
-usernameVar wird oben links in der ecke des Spielfeldes angezeigt (muss noch verschoben werden)

---

28.03.2017

Zeit:90min
-versucht github in der schule in der portabel einzurichten
-informiert über java swing befehle, um dynamische textausgaben im fenster auszugeben

Zeit:60min
-über github einstellungen informeirt
-github in eclipse eingebunden

---

31.03.2017

Zeit: 150min
-informiert über java fx und wie man labels erstellt
-label erstellt mit dynamischen text -> eingegebener Benutzername (usernameVar) wird an der richtigen Position ausgegeben#
-größe des textes angepasst

Start: 19:15Uhr Ende:21.20Uhr
-updated readme.md in the master branch
	-added muss-, wunsch- & abgrenzungskriterien
-in der game.fxml (spielfeld) die funktionen der buttons sortiert
-syntax in den button funktionen strukturiert
-public kontostand added (vorrübergehend im java code und nicht in der datenbank)
-statische kontostand ausgabe im spielfeld (3000EUR)

---

01.04.2017

Zeit: 5h
-versucht das Guthaben Label im Spielfeld immerwieder zu aktualisieren

---

04.04.2017

Zeit:90min
-grafische Kontostandausgabe wird jetzt vom neuen Kontostand überlappt

---

07.04.2017

Zeit: 90min
-dynamische grafische Ausgabe des Guthabens im Spielfeldfenster

---

